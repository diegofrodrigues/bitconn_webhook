<odoo>
  <data>
    <!-- Donate Modal View (defined first so button reference works) -->
    <record id="view_bitconn_webhook_donate_modal" model="ir.ui.view">
      <field name="name">bitconn.webhook.donate.modal</field>
      <field name="model">ir.actions.act_window</field>
      <field name="arch" type="xml">
        <form string="Support / Apoiar">
          <group>
            <group>
              <p>
                <span>
                  If this module helped you, consider a donation (or buy me a beer üç∫) to keep development active!
                </span>
                <br/>
                <span style="display:block;border-top:1px solid #ddd;margin:10px 0 8px 0;"></span>
                <span>
                  Se este m√≥dulo foi √∫til, considere fazer uma doa√ß√£o (ou pagar uma cerveja üç∫) para manter o desenvolvimento!
                </span>
                <br/><br/>
                <strong>Pix Key / Chave Pix:</strong>
                <br/>
                <span style="font-size:12px; word-break:break-all; display:inline-block; margin-top:4px;">00020126810014br.gov.bcb.pix013655f22863-4cea-41e9-904c-df3ce0b241ef0219wa conn odoo module5204000053039865802BR5924Diego Ferreira Rodrigues6009Sao Paulo62290525REC68545B90764819659464106304D86E</span>
              </p>
            </group>
            <group>
              <div style="text-align:center; margin-top:10px;">
                <img src="/bitconn_webhook/static/description/qr_code_donate.png" style="max-width:200px;display:block;margin:auto;" alt="Donate QR"/>
                <span id="pix-feedback-bw" style="display:none;color:green;font-weight:bold;margin-left:10px;">Copied!</span>
                <br/>
                <a href="#" class="btn btn-secondary" role="button"
                   onclick="navigator.clipboard.writeText('00020126810014br.gov.bcb.pix013655f22863-4cea-41e9-904c-df3ce0b241ef0219wa conn odoo module5204000053039865802BR5924Diego Ferreira Rodrigues6009Sao Paulo62290525REC68545B90764819659464106304D86E').then(function(){var m=document.getElementById('pix-feedback-bw');if(m){m.style.display='inline';setTimeout(function(){m.style.display='none';},2000);}}); return false;">
                  Copy Pix Key
                </a>
              </div>
            </group>
          </group>
          <footer>
            <button string="Close" class="btn-secondary" special="cancel"/>
          </footer>
        </form>
      </field>
    </record>

    <record id="bitconn_webhook_donate_modal_action" model="ir.actions.act_window">
      <field name="name">Donate</field>
      <field name="res_model">ir.actions.act_window</field>
      <field name="view_mode">form</field>
      <field name="view_id" ref="view_bitconn_webhook_donate_modal"/>
      <field name="target">new</field>
    </record>

    <record id="view_bitconn_webhook_form" model="ir.ui.view">
      <field name="name">bitconn.webhook.form</field>
      <field name="model">bitconn.webhook</field>
      <field name="arch" type="xml">
  <form>
          <header>
            <button name="%(bitconn_webhook_donate_modal_action)d" type="action" string="Donate" class="btn-donate" icon="fa-money"/>
            <style>
              .btn-donate {
                animation: bounce 1s ease 0s 5;
                background-color: #4285f4 !important;
                color: #ffffff !important;
              }
              @keyframes bounce {
                0%,100% { transform: translateY(0); }
                20% { transform: translateY(-18px); }
                40% { transform: translateY(0); }
                60% { transform: translateY(-9px); }
                80% { transform: translateY(0); }
              }
            </style>
          </header>
          <sheet>
            <group col="2">
              <field name="name"/>
              <field name="user_id" options="{'no_create': True, 'no_open': True}"/>
              <field name="can_create" invisible="can_code == True"/>
              <field name="can_write" invisible="can_code == True"/>
              <field name="can_unlink" invisible="can_code == True"/>
              <field name="can_code" invisible="can_create == True or can_write == True or can_unlink == True"/>
            </group>
            <notebook>
              <page string="Inbound">
                <group>
                  <group col="2" class="w-100">
                    <field name="allowed_model_ids" widget="many2many_tags"/>
                    <field name="inbound_auth_type" widget="radio"/>
                  </group>
                  <group col="2" class="w-100">
                    <field name="webhook_url" readonly="1" widget="CopyClipboardURL"/>
                    <field name="secret_key" readonly="1" widget="CopyClipboardChar" invisible="inbound_auth_type == 'none'"/>
                    <!-- <field name="webhook_uuid" readonly="1"/> -->
                  </group>
                </group>
                <group invisible="inbound_auth_type == 'none'">
                    <button name="action_regenerate_credentials" string="Regenerate Credentials" type="object" icon="fa-refresh" class="btn-link d-block mx-auto" colspan="2"/>
                </group>
                <group invisible="inbound_auth_type != 'none'">
                  <div class="alert alert-danger" role="alert">
                    <strong>‚ö†Ô∏è Security Warning:</strong> This webhook is configured for public access without authentication.
                    Anyone with the webhook URL can send requests. Only use this for trusted sources or public endpoints.
                  </div>
                </group>
              </page>

              <page string="Code" invisible="can_code == False">
                <group>
                  <div class="alert alert-warning" role="status">
                    <strong>Warning:</strong> Custom code execution is a powerful feature. Only enable for trusted sources.
                    The code will run with the configured user's permissions and full access to all models.
                  </div>
                </group>
                <group>
                  <separator string="Python Code"/>
                  <div class="text-muted">
                    Write your Python code below. Available variables:
                    <ul>
                      <li><code>request</code>: Request object with:
                        <ul>
                          <li><code>request['body']</code>: Raw request body (string)</li>
                          <li><code>request['json']</code>: Parsed JSON body (dict)</li>
                          <li><code>request['headers']</code>: Request headers (dict)</li>
                          <li><code>request['method']</code>: HTTP method (POST, GET, etc.)</li>
                        </ul>
                      </li>
                      <li><code>env</code>: Odoo environment (with configured user)</li>
                      <li><code>user_id</code>: Configured user ID</li>
                      <li><code>json</code>: JSON module for parsing</li>
                    </ul>
                    <strong>Important:</strong> Set <code>result</code> variable to return custom response. The result will be shown in the Test Output.
                  </div>
                </group>
                <group>
                  <field name="python_code" nolabel="1" widget="code" options="{'mode': 'python', 'lineWrapping': true, 'lineNumbers': true}" placeholder="# Example:&#10;data = request['json']&#10;partner = env['res.partner'].create({&#10;    'name': data.get('name'),&#10;    'email': data.get('email')&#10;})&#10;result = {'ok': True, 'partner_id': partner.id, 'name': partner.name}"/>
                </group>
                
                <group>
                  <separator string="Test Code"/>
                </group>
                <group col="2">
                  <group class="w-100" colspan="2">
                    <field name="pin_request"/>
                    <div class="text-muted" invisible="pin_request == False">
                      <i class="fa fa-thumb-tack"/> Using Sample Request (below) as test input.
                      <br/>
                      <strong>Note:</strong> Webhook responses will include author/support information when Pin Request is enabled.
                    </div>
                  </group>
                  <group class="w-100" colspan="2" invisible="pin_request == True">
                    <label for="test_input" string="Test Input (Request Body)"/>
                    <field name="test_input" nolabel="1" widget="code" options="{'mode': 'javascript', 'lang': 'json', 'lineWrapping': true, 'lineNumbers': true}"/>
                  </group>
                  <group class="w-100" colspan="2">
                    <button name="action_test_code" type="object" string="Test Code" class="btn-primary" icon="fa-play"/>
                  </group>
                  <group class="w-100" colspan="2">
                    <label for="test_output" string="Test Output (Result Variable)"/>
                    <field name="test_output" nolabel="1" widget="code" options="{'mode': 'javascript', 'lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}" readonly="1"/>
                  </group>
                </group>
                
                <group>
                  <separator string="Sample Request (Latest Received)"/>
                  <div class="text-muted">
                    This field automatically captures the last request received by this webhook. 
                    <span invisible="pin_request == False"><strong>Currently pinned for testing.</strong></span>
                    <span invisible="pin_request == True">Check "Pin Request for Testing" above to use this as test input.</span>
                  </div>
                </group>
                <group>
                  <field name="sample_request_payload" nolabel="1" widget="code" options="{'mode': 'javascript', 'lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}" readonly="1"/>
                </group>
              </page>

              <page string="Outbound">
                <group col="2">
                  <field name="outbound_enabled"/>
                  <field name="outbound_url" colspan="2"/>
                  <field name="outbound_headers" widget="code" options="{'mode': 'javascript', 'lang': 'json', 'lineWrapping': true, 'lineNumbers': true}" colspan="2" placeholder='{"Authorization": "Bearer xxxxxxxxxxx"}'/>
                  <separator string="Test"/>
                  <field name="outbound_test_body" widget="code" options="{'mode': 'javascript', 'lang': 'json', 'lineWrapping': true, 'lineNumbers': true}" colspan="2"/>
                    <button name="action_test_outbound" type="object" string="Send Test" class="btn-primary" icon="fa-paper-plane"/>
                  <field name="outbound_test_result" widget="code" options="{'mode': 'javascript','lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}" readonly="0" colspan="2"/>
                </group>
              </page>
              <page string="Help">
                <group>
                  <separator string="Create"/>
                </group>
                <group>
                  <div class="text-muted" name="desc_create">Creates a new record. Use when an external system submits data to insert into Odoo. Required fields depend on the model (inspect schema if available).</div>
                </group>
                <group>
                  <field name="example_create" nolabel="1" widget="code" options="{'mode': 'javascript','lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}"/>
                </group>

                <group>
                  <separator string="Write"/>
                </group>
                <group>
                  <div class="text-muted" name="desc_write">Updates records found by the domain. Use to change specific fields without recreating the record. Domain must return at least one record.</div>
                </group>
                <group>
                  <field name="example_write" nolabel="1" widget="code" options="{'mode': 'javascript','lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}"/>
                </group>

                <group>
                  <separator string="Unlink"/>
                </group>
                <group>
                  <div class="text-muted" name="desc_unlink">Deletes records returned by the domain. Destructive operation; enable 'Can Unlink' and use carefully.</div>
                </group>
                <group>
                  <field name="example_unlink" nolabel="1" widget="code" options="{'mode': 'javascript','lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}"/>
                </group>

                <group>
                  <separator string="Search Advanced"/>
                </group>
                <group>
                  <div class="text-muted" name="desc_search_adv">Searches records and returns structured data. Supports advanced spec in 'fields' using dict objects for nested relations. Can be used via the public endpoint or inside Server Actions (Manual Payload) to build outbound payloads.</div>
                </group>
                <group>
                  <field name="example_search_advanced" nolabel="1" widget="code" options="{'mode': 'javascript','lang': 'json', 'lineWrapping': true, 'lineNumbers': true, 'readonly': true}"/>
                </group>
              </page>
            </notebook>
          </sheet>
            <chatter/>
        </form>
      </field>
    </record>

    <record id="view_bitconn_webhook_tree" model="ir.ui.view">
      <field name="name">bitconn.webhook.tree</field>
      <field name="model">bitconn.webhook</field>
      <field name="arch" type="xml">
        <list>
          <field name="name"/>
          <field name="user_id"/>
          <field name="webhook_url"/>
          <field name="can_create"/>
          <field name="can_write"/>
          <field name="can_unlink"/>
        </list>
      </field>
    </record>

    <record id="action_bitconn_webhook" model="ir.actions.act_window">
      <field name="name">Bitconn Webhooks</field>
      <field name="res_model">bitconn.webhook</field>
      <field name="view_mode">list,form</field>
    </record>

    <menuitem id="menu_bitconn_webhook_root" name="Bitconn Webhook" parent="base.menu_custom" sequence="1000"/>
  <menuitem id="menu_bitconn_webhook" name="Webhooks" parent="menu_bitconn_webhook_root" action="action_bitconn_webhook"/>
  </data>
</odoo>
